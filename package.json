{
  "icon": "./icons/icon.png",
  "name": "rgss-script-editor",
  "displayName": "RGSS Script Editor",
  "description": "A VSCode extension that allows to extract scripts files from RPG Maker bundle file and load them individually based on a load order",
  "author": {
    "name": "SnowSzn",
    "url": "https://github.com/SnowSzn"
  },
  "publisher": "SnowSzn",
  "license": "MIT",
  "keywords": [
    "Ruby Game Scripting System",
    "RGSS",
    "RGSS1",
    "RGSS2",
    "RGSS3",
    "RPG Maker Script Editor",
    "RPG Maker Script Extractor",
    "RPGMaker",
    "RPG Maker XP",
    "RPG Maker VX",
    "RPG Maker VX Ace"
  ],
  "repository": {
    "url": "https://github.com/SnowSzn/rgss-script-editor"
  },
  "bugs": {
    "url": "https://github.com/SnowSzn/rgss-script-editor/issues"
  },
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:Game.ini"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "rgss-script-editor.setProjectFolder",
        "title": "Set Project Folder",
        "category": "RGSS Script Editor",
        "icon": "$(folder)"
      },
      {
        "command": "rgss-script-editor.openProjectFolder",
        "title": "Open Project Folder",
        "category": "RGSS Script Editor",
        "icon": "$(folder-opened)"
      },
      {
        "command": "rgss-script-editor.extractScripts",
        "title": "Extract Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-down)"
      },
      {
        "command": "rgss-script-editor.createScriptLoader",
        "title": "Create Script Loader Bundle File",
        "category": "RGSS Script Editor",
        "icon": "$(note)"
      },
      {
        "command": "rgss-script-editor.createBundleFile",
        "title": "Create Bundle File From Extracted Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(package)"
      },
      {
        "command": "rgss-script-editor.runGame",
        "title": "Run Game",
        "category": "RGSS Script Editor",
        "icon": "$(run)"
      },
      {
        "command": "rgss-script-editor.processGameException",
        "title": "Check Last Game Exception",
        "category": "RGSS Script Editor",
        "icon": "$(warning)"
      },
      {
        "command": "rgss-script-editor.openLoadOrder",
        "title": "Open Load Order File",
        "category": "RGSS Script Editor",
        "icon": "$(tasklist)"
      },
      {
        "command": "rgss-script-editor.updateLoadOrder",
        "title": "Update Load Order File",
        "category": "RGSS Script Editor",
        "icon": "$(sync~spin)"
      },
      {
        "command": "rgss-script-editor.revealScriptSection",
        "title": "Reveal in Explorer...",
        "category": "RGSS Script Editor",
        "icon": "$(eye)"
      },
      {
        "command": "rgss-script-editor.createScriptSection",
        "title": "Create...",
        "category": "RGSS Script Editor",
        "icon": "$(new-file)"
      },
      {
        "command": "rgss-script-editor.deleteScriptSection",
        "title": "Delete...",
        "category": "RGSS Script Editor",
        "icon": "$(trash)"
      },
      {
        "command": "rgss-script-editor.renameScriptSection",
        "title": "Rename...",
        "category": "RGSS Script Editor",
        "icon": "$(edit)"
      },
      {
        "command": "rgss-script-editor.alternateLoadScriptSection",
        "title": "Alternate Load Status...",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "rgss-script-editor.refresh",
        "title": "Refresh...",
        "category": "RGSS Script Editor",
        "icon": "$(sync~spin)"
      },
      {
        "command": "rgss-script-editor.alternateDropMode",
        "title": "Alternate Drop Mode",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-swap)"
      }
    ],
    "configuration": [
      {
        "title": "_RGSS Script Editor",
        "properties": {
          "rgssScriptEditor.debug.logToConsole": {
            "type": "boolean",
            "default": true,
            "description": "Enables this extension to log information to the Visual Studio Code debug console",
            "order": 0
          },
          "rgssScriptEditor.debug.logToFile": {
            "type": "boolean",
            "default": true,
            "description": "Enables this extension to log information to a file",
            "order": 1
          },
          "rgssScriptEditor.extension.quickStart": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to activate itself by checking whether the opened folder is a valid RPG Maker project or not",
            "order": 10
          },
          "rgssScriptEditor.extension.autoReveal": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to reveal the active file on the script editor view",
            "order": 11
          },
          "rgssScriptEditor.external.backUpsFolder": {
            "type": "string",
            "default": "./.rgss-script-editor-backups",
            "description": "The relative path within the project's folder where all back ups will be saved",
            "order": 30
          },
          "rgssScriptEditor.external.scriptsFolder": {
            "type": "string",
            "default": "./Scripts",
            "description": "The relative path within the project's folder where all scripts will be extracted",
            "order": 31
          },
          "rgssScriptEditor.gameplay.gameExecutablePath": {
            "type": "string",
            "default": "./Game.exe",
            "description": "The relative path to the game executable inside the project folder",
            "order": 50
          },
          "rgssScriptEditor.gameplay.useWine": {
            "type": "boolean",
            "default": true,
            "description": "Whether to use Wine to execute the game executable in Linux or not",
            "order": 51
          },
          "rgssScriptEditor.gameplay.automaticArgumentsDetection": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to determine the appropiate game executable arguments based on the RGSS version (When this mode is enabled custom arguments are ignored)",
            "order": 60
          },
          "rgssScriptEditor.gameplay.editorTestMode": {
            "type": "boolean",
            "default": true,
            "description": "Whether to run the game on test mode or not (This flag is ignored when using custom arguments)",
            "order": 61
          },
          "rgssScriptEditor.gameplay.nativeConsole": {
            "type": "boolean",
            "default": true,
            "description": "(RPG Maker VX Ace Only) Whether to allow a console window to appear on game execution or not (This flag is ignored when using custom arguments)",
            "order": 62
          },
          "rgssScriptEditor.gameplay.customArguments": {
            "type": "string",
            "default": "",
            "description": "Set your own custom arguments here separated by a whitespace (You must disable 'auto. arguments detection' behavior to use this)",
            "order": 63
          },
          "rgssScriptEditor.gameplay.gameExceptionAutoProcess": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to display a message box reporting the exception that may have occurred during the last game execution.",
            "order": 70
          },
          "rgssScriptEditor.gameplay.gameExceptionShowInEditor": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to show a new text document besides the active editor with the last exception information.",
            "order": 71
          }
        }
      }
    ],
    "keybindings": [
      {
        "command": "rgss-script-editor.setProjectFolder",
        "key": "F6",
        "when": "workspaceFolderCount > 0"
      },
      {
        "command": "rgss-script-editor.runGame",
        "key": "F12",
        "when": "rgss-script-editor.openedFolder"
      },
      {
        "command": "rgss-script-editor.alternateDropMode",
        "key": "F9",
        "when": "rgss-script-editor.openedFolder"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "rgss-script-editor",
          "icon": "./icons/views/icon.svg",
          "title": "RGSS Script Editor"
        }
      ]
    },
    "views": {
      "rgss-script-editor": [
        {
          "id": "rgss-script-editor.editorView",
          "icon": "./icons/views/icon.svg",
          "contextualTitle": "RGSS Script Editor",
          "name": "Editor"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "rgss-script-editor.editorView",
        "contents": "There is no folder open in Visual Studio Code.\nYou should open a RPG Maker project folder to start this extension.\n[Open Folder](command:vscode.openFolder)",
        "when": "workspaceFolderCount <= 0"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "A folder is currently open.\nYou can select the folder to set it as the active RPG Maker folder using the button below.\n[Set Active Project Folder](command:rgss-script-editor.setProjectFolder)",
        "when": "workspaceFolderCount == 1 && !rgss-script-editor.openedFolder"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "There is more than one folder open in Visual Studio Code.\nYou can select a folder to set it as the active RPG Maker folder using the button below.\n[Set Active Project Folder](command:rgss-script-editor.setProjectFolder)",
        "when": "workspaceFolderCount > 1 && !rgss-script-editor.openedFolder"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "To use this extension you must extract the contents of the RPG Maker bundled file.\nA new folder with all script files extracted will be created inside the folder.\nOnce all scripts are extracted, you can start using this editor\n[Extract Scripts](command:rgss-script-editor.extractScripts)",
        "when": "rgss-script-editor.openedFolder && !rgss-script-editor.extractedScripts"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "rgss-script-editor.updateLoadOrder",
          "when": "view == rgss-script-editor.editorView",
          "group": "navigation"   
        },
        {
          "command": "rgss-script-editor.createScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.alternateLoadScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.openLoadOrder",
          "when": "view == rgss-script-editor.editorView"
        }
      ],
      "view/item/context": [
        {
          "command": "rgss-script-editor.revealScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.createScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.renameScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.deleteScriptSection",
          "when": "view == rgss-script-editor.editorView"
        },
        {
          "command": "rgss-script-editor.alternateLoadScriptSection",
          "when": "view == rgss-script-editor.editorView"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "@hyrious/marshal": "^0.3.2"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "^18.19.3",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "@vscode/test-electron": "^2.3.6",
    "eslint": "^8.52.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "typescript": "^5.2.2"
  }
}
