{
  "icon": "./icons/icon.png",
  "name": "rgss-script-editor",
  "displayName": "RGSS Script Editor",
  "description": "An extension that allows to use Visual Studio Code as the code editor for RPG Maker game projects",
  "author": {
    "name": "SnowSzn",
    "url": "https://github.com/SnowSzn"
  },
  "publisher": "SnowSzn",
  "license": "GPL-3.0-only",
  "keywords": [
    "Ruby Game Scripting System",
    "RGSS",
    "RGSS1",
    "RGSS2",
    "RGSS3",
    "RPGMaker",
    "RPG Maker Script Editor",
    "RPG Maker Script Extractor",
    "RPG Maker",
    "RPG Maker XP",
    "RPG Maker VX",
    "RPG Maker VX Ace"
  ],
  "repository": {
    "url": "https://github.com/SnowSzn/rgss-script-editor"
  },
  "bugs": {
    "url": "https://github.com/SnowSzn/rgss-script-editor/issues"
  },
  "version": "1.4.1",
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:Game.ini"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "rgss-script-editor.setProjectFolder",
        "title": "Set Project Folder",
        "category": "RGSS Script Editor",
        "icon": "$(folder)"
      },
      {
        "command": "rgss-script-editor.openProjectFolder",
        "title": "Open Project Folder",
        "category": "RGSS Script Editor",
        "icon": "$(folder-opened)"
      },
      {
        "command": "rgss-script-editor.extractScripts",
        "title": "Extract Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-down)"
      },
      {
        "command": "rgss-script-editor.importScripts",
        "title": "Import Scripts From Bundle File",
        "category": "RGSS Script Editor",
        "icon": "$(file-add)"
      },
      {
        "command": "rgss-script-editor.createScriptLoader",
        "title": "Create Script Loader",
        "category": "RGSS Script Editor",
        "icon": "$(note)"
      },
      {
        "command": "rgss-script-editor.createBackupBundleFile",
        "title": "Create a Back Up With All Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(archive)"
      },
      {
        "command": "rgss-script-editor.createBundleFile",
        "title": "Create a Bundle File From Enabled Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(package)"
      },
      {
        "command": "rgss-script-editor.createSelectedBundleFile",
        "title": "Create a Bundle File From Selected Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(package)"
      },
      {
        "command": "rgss-script-editor.compileBundleFile",
        "title": "Compile Enabled Scripts",
        "category": "RGSS Script Editor",
        "icon": "$(package)"
      },
      {
        "command": "rgss-script-editor.runGame",
        "title": "Run Game",
        "category": "RGSS Script Editor",
        "icon": "$(run)"
      },
      {
        "command": "rgss-script-editor.processGameException",
        "title": "Check Last Game Exception",
        "category": "RGSS Script Editor",
        "icon": "$(warning)"
      },
      {
        "command": "rgss-script-editor.chooseEditorMode",
        "title": "Choose Editor Mode",
        "category": "RGSS Script Editor",
        "icon": "$(insert)"
      },
      {
        "command": "rgss-script-editor.openLoadOrder",
        "title": "Open Load Order File",
        "category": "RGSS Script Editor",
        "icon": "$(tasklist)"
      },
      {
        "command": "rgss-script-editor.sectionCreate",
        "title": "Create Section...",
        "category": "RGSS Script Editor",
        "icon": "$(new-file)"
      },
      {
        "command": "rgss-script-editor.sectionDelete",
        "title": "Delete Section/s...",
        "category": "RGSS Script Editor",
        "icon": "$(trash)"
      },
      {
        "command": "rgss-script-editor.sectionRename",
        "title": "Rename Section...",
        "category": "RGSS Script Editor",
        "icon": "$(edit)"
      },
      {
        "command": "rgss-script-editor.sectionMove",
        "title": "Move Section...",
        "category": "RGSS Script Editor",
        "icon": "$(move)"
      },
      {
        "command": "rgss-script-editor.sectionCopy",
        "title": "Copy Section/s...",
        "category": "RGSS Script Editor",
        "icon": "$(clippy)"
      },
      {
        "command": "rgss-script-editor.sectionPaste",
        "title": "Paste Section/s...",
        "category": "RGSS Script Editor",
        "icon": "$(clippy)"
      },
      {
        "command": "rgss-script-editor.sectionToggleLoad",
        "title": "Toggle Section/s Load Status On/Off...",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "rgss-script-editor.sectionToggleCollapse",
        "title": "Toggle Section Collapse Status...",
        "category": "RGSS Script Editor",
        "icon": "$(arrow-both)"
      },
      {
        "command": "rgss-script-editor.sectionRevealInVSCodeExplorer",
        "title": "Reveal in Explorer...",
        "category": "RGSS Script Editor",
        "icon": "$(eye)"
      },
      {
        "command": "rgss-script-editor.sectionCopyAbsolutePath",
        "title": "Copy Absolute Path...",
        "category": "RGSS Script Editor",
        "icon": "$(copy)"
      },
      {
        "command": "rgss-script-editor.sectionCopyRelativePath",
        "title": "Copy Relative Path...",
        "category": "RGSS Script Editor",
        "icon": "$(copy)"
      },
      {
        "command": "rgss-script-editor.sectionOpenInExplorer",
        "title": "Reveal In File Explorer...",
        "category": "RGSS Script Editor",
        "icon": "$(search)"
      }
    ],
    "configuration": [
      {
        "title": "RGSS Script Editor",
        "properties": {
          "rgssScriptEditor.debug.logToConsole": {
            "type": "boolean",
            "default": true,
            "description": "Enables this extension to log information to a VSCode output channel.",
            "order": 0
          },
          "rgssScriptEditor.debug.logToFile": {
            "type": "boolean",
            "default": false,
            "description": "Enables this extension to log information to a file inside the project's folder.",
            "order": 1
          },
          "rgssScriptEditor.extension.quickStart": {
            "type": "boolean",
            "default": true,
            "description": "Enables quick start mode.\n\nWhen quick start mode is enabled, the extension will open the current folder automatically if it is a valid RPG Maker project.",
            "order": 10
          },
          "rgssScriptEditor.extension.autoReveal": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to reveal the active script file on the extension's script editor view.",
            "order": 11
          },
          "rgssScriptEditor.extension.filesEndOfLine": {
            "type": "string",
            "enum": [
              "auto",
              "\r\n",
              "\n"
            ],
            "enumDescriptions": [
              "Auto mode uses the appropiate EOL type based on the operating system",
              "CRLF",
              "LF"
            ],
            "default": "auto",
            "description": "Choose the type of end of line that the extension will use for files.",
            "order": 12
          },
          "rgssScriptEditor.extension.insertEncodingComment": {
            "type": "boolean",
            "default": false,
            "description": "Allows the extension to insert a magic comment (# encoding: utf-8) inside every Ruby script file.\n\nIn older versions of the extension, all scripts must have this magic comment because Ruby was not able to determine the encoding of a file.\n\nThis is not needed anymore since v1.5.0 but it is available at the user's choice.\n\nYou can read more in the extension's README.",
            "order": 13
          },
          "rgssScriptEditor.extension.recreateScriptLoader": {
            "type": "boolean",
            "default": true,
            "description": "Whether to re-create the script loader when a project is opened or not.\n\nThe script loader this extension uses is subject to change between updates so it is recommended to leave it enabled.\n\nOnly disable this if you are using a custom script loader or you want to update the script loader manually between updates.",
            "order": 14
          },
          "rgssScriptEditor.extension.importCreateFolder": {
            "type": "boolean",
            "default": true,
            "description": "Whether to create a folder or not when importing scripts from a bundle file.\n\nRecommended to enable it to keep things tidier.",
            "order": 15
          },
          "rgssScriptEditor.extension.scriptNameValidation": {
            "type": "string",
            "enum": [
              "auto",
              "always",
              "never"
            ],
            "enumDescriptions": [
              "Auto mode enables/disables script name validation when necessary",
              "Always validate script names (enabled)",
              "Never validate script names (disabled)"
            ],
            "default": "auto",
            "description": "Choose script name validation mode.\n\nDue to a Ruby limitation, any RPG Maker that uses a version of Ruby below v1.9 must enable this setting.\n\nThe RPG Maker versions affected by this limitation are: RPG Maker XP and RPG Maker VX.\n\nIf you are using MKXP-Z you don't need to use this, regardless of the RPG Maker version.\n\nCheck extension's README for more information.\n\n**DISABLE AT YOUR OWN RISK**",
            "order": 18
          },
          "rgssScriptEditor.external.backUpsFolder": {
            "type": "string",
            "default": "./.rgss-script-editor/backups",
            "description": "The relative path within the project's folder where all backups will be saved.",
            "order": 30
          },
          "rgssScriptEditor.external.scriptsFolder": {
            "type": "string",
            "default": "./Scripts",
            "description": "The relative path within the project's folder where all scripts will be extracted.",
            "order": 31
          },
          "rgssScriptEditor.external.extensionLogFileFolder": {
            "type": "string",
            "default": "./.rgss-script-editor",
            "description": "The relative path within the project's folder where the extension log file is created.",
            "order": 40
          },
          "rgssScriptEditor.external.gameLogFileFolder": {
            "type": "string",
            "default": "./.rgss-script-editor",
            "description": "The relative path within the project's folder where the game log file is created.",
            "order": 41
          },
          "rgssScriptEditor.external.scriptsCompileFolder": {
            "type": "string",
            "default": "./.rgss-script-editor/dist",
            "description": "The relative path within the project's folder where the compiled scripts bundle file is saved.",
            "order": 45
          },
          "rgssScriptEditor.gameplay.gameExecutablePath": {
            "type": "string",
            "default": "./Game.exe",
            "description": "The relative path to the game executable inside the project folder.",
            "order": 50
          },
          "rgssScriptEditor.gameplay.useWine": {
            "type": "string",
            "default": "wine",
            "description": "Sets the command to invoke Wine to run the game executable. (Linux Only!)",
            "order": 51
          },
          "rgssScriptEditor.gameplay.runGameBehavior": {
            "type": "string",
            "enum": [
              "nothing",
              "kill and run",
              "allow multiple"
            ],
            "enumDescriptions": [
              "This is the default RPG Maker behavior (You need to close the game before running it again)",
              "Kills the game executable and runs it again automatically",
              "Allows multiple game processes running at the same time"
            ],
            "default": "nothing",
            "description": "Choose how the game executable is handled when it is already running.",
            "order": 55
          },
          "rgssScriptEditor.gameplay.automaticArgumentsDetection": {
            "type": "boolean",
            "default": true,
            "description": "Enables automatic arguments detection mode.\n\nIf enabled, the extension will automatically choose the appropiate arguments based on the RPG Maker version detected.",
            "order": 60
          },
          "rgssScriptEditor.gameplay.editorTestMode": {
            "type": "boolean",
            "default": true,
            "description": "Enables test (debug) mode.",
            "order": 61
          },
          "rgssScriptEditor.gameplay.nativeConsole": {
            "type": "boolean",
            "default": true,
            "description": "Enables RPG Maker native console. (RPG Maker VX Ace only!)",
            "order": 62
          },
          "rgssScriptEditor.gameplay.customArguments": {
            "type": "string",
            "default": "",
            "description": "Set your own custom arguments here separated by a whitespace.\n\nYou must disable 'auto. arguments detection' behavior to use this!",
            "order": 63
          },
          "rgssScriptEditor.gameplay.gameExceptionAutoProcess": {
            "type": "boolean",
            "default": false,
            "description": "Allows the extension to auto-process the last detected exception.",
            "order": 70
          },
          "rgssScriptEditor.gameplay.gameExceptionShowInEditor": {
            "type": "boolean",
            "default": true,
            "description": "Allows the extension to show a markdown file besides the active editor with the exception backtrace information.",
            "order": 71
          }
        }
      }
    ],
    "keybindings": [
      {
        "command": "rgss-script-editor.setProjectFolder",
        "key": "F6",
        "when": "workspaceFolderCount > 0"
      },
      {
        "command": "rgss-script-editor.runGame",
        "key": "F12",
        "when": "rgss-script-editor.openedFolder"
      },
      {
        "command": "rgss-script-editor.compileBundleFile",
        "key": "CTRL+F5",
        "when": "rgss-script-editor.extractedScripts"
      },
      {
        "command": "rgss-script-editor.sectionCreate",
        "key": "insert",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionDelete",
        "key": "delete",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionRename",
        "key": "F2",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionCopy",
        "key": "CTRL+C",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionPaste",
        "key": "CTRL+V",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionToggleLoad",
        "key": "F4",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionCopyAbsolutePath",
        "key": "F7",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      },
      {
        "command": "rgss-script-editor.sectionCopyRelativePath",
        "key": "F8",
        "when": "focusedView == 'rgss-script-editor.editorView'"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "rgss-script-editor",
          "icon": "./icons/views/icon.svg",
          "title": "RGSS Script Editor"
        }
      ]
    },
    "views": {
      "rgss-script-editor": [
        {
          "id": "rgss-script-editor.editorView",
          "icon": "./icons/views/icon.svg",
          "contextualTitle": "RGSS Script Editor",
          "name": "Editor"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "rgss-script-editor.editorView",
        "contents": "There is no folder open in Visual Studio Code.\nYou should open a RPG Maker project folder to start this extension.\n[Open Folder](command:vscode.openFolder)",
        "when": "workspaceFolderCount <= 0"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "A folder is currently open.\nYou can select the folder to set it as the active RPG Maker folder using the button below.\n[Set Active Project Folder](command:rgss-script-editor.setProjectFolder)",
        "when": "workspaceFolderCount == 1 && !rgss-script-editor.openedFolder"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "There is more than one folder open in Visual Studio Code.\nYou can select a folder to set it as the active RPG Maker folder using the button below.\n[Set Active Project Folder](command:rgss-script-editor.setProjectFolder)",
        "when": "workspaceFolderCount > 1 && !rgss-script-editor.openedFolder"
      },
      {
        "view": "rgss-script-editor.editorView",
        "contents": "To use this extension you must extract the contents of the RPG Maker bundled file.\nA new folder with all script files extracted will be created inside the folder.\nOnce all scripts are extracted, you can start using this editor\n[Extract Scripts](command:rgss-script-editor.extractScripts)",
        "when": "rgss-script-editor.openedFolder && !rgss-script-editor.extractedScripts"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "rgss-script-editor.chooseEditorMode",
          "when": "view == rgss-script-editor.editorView",
          "group": "navigation"
        },
        {
          "command": "rgss-script-editor.openLoadOrder",
          "when": "view == rgss-script-editor.editorView",
          "group": "navigation"
        },
        {
          "command": "rgss-script-editor.sectionCreate",
          "when": "view == rgss-script-editor.editorView",
          "group": "1"
        },
        {
          "command": "rgss-script-editor.processGameException",
          "when": "view == rgss-script-editor.editorView",
          "group": "2"
        },
        {
          "command": "rgss-script-editor.createScriptLoader",
          "when": "view == rgss-script-editor.editorView",
          "group": "3"
        },
        {
          "command": "rgss-script-editor.createBundleFile",
          "when": "view == rgss-script-editor.editorView",
          "group": "4"
        },
        {
          "command": "rgss-script-editor.createBackupBundleFile",
          "when": "view == rgss-script-editor.editorView",
          "group": "4"
        },
        {
          "command": "rgss-script-editor.createSelectedBundleFile",
          "when": "view == rgss-script-editor.editorView",
          "group": "4"
        },
        {
          "command": "rgss-script-editor.importScripts",
          "when": "view == rgss-script-editor.editorView",
          "group": "5"
        }
      ],
      "view/item/context": [
        {
          "command": "rgss-script-editor.sectionRename",
          "when": "view == rgss-script-editor.editorView",
          "group": "1"
        },
        {
          "command": "rgss-script-editor.sectionToggleLoad",
          "when": "view == rgss-script-editor.editorView",
          "group": "2"
        },
        {
          "command": "rgss-script-editor.sectionCreate",
          "when": "view == rgss-script-editor.editorView",
          "group": "3"
        },
        {
          "command": "rgss-script-editor.sectionDelete",
          "when": "view == rgss-script-editor.editorView",
          "group": "3"
        },
        {
          "command": "rgss-script-editor.sectionCopy",
          "when": "view == rgss-script-editor.editorView",
          "group": "4"
        },
        {
          "command": "rgss-script-editor.sectionPaste",
          "when": "view == rgss-script-editor.editorView",
          "group": "4"
        },
        {
          "command": "rgss-script-editor.sectionCopyAbsolutePath",
          "when": "view == rgss-script-editor.editorView",
          "group": "6"
        },
        {
          "command": "rgss-script-editor.sectionCopyRelativePath",
          "when": "view == rgss-script-editor.editorView",
          "group": "6"
        },
        {
          "command": "rgss-script-editor.sectionRevealInVSCodeExplorer",
          "when": "view == rgss-script-editor.editorView",
          "group": "7"
        },
        {
          "command": "rgss-script-editor.sectionOpenInExplorer",
          "when": "view == rgss-script-editor.editorView",
          "group": "7"
        },
        {
          "command": "rgss-script-editor.createSelectedBundleFile",
          "when": "view == rgss-script-editor.editorView",
          "group": "8"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "@hyrious/marshal": "^0.3.2"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.3",
    "@types/node": "^22.15.18",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@vscode/test-electron": "^2.3.6",
    "eslint": "^9.26.0",
    "glob": "^11.0.2",
    "mocha": "^11.2.2",
    "typescript": "^5.2.2"
  }
}